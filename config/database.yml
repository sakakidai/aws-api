default: &default
  adapter: postgresql
  encoding: unicode
  # For details on connection pooling, see Rails configuration guide
  # https://guides.rubyonrails.org/configuring.html#database-pooling
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>

development:
  <<: *default
  database: aws_api_development
  host: db
  username: <%= ENV.fetch("DB_USER") { 'postgres' } %>
  password: <%= ENV.fetch("DB_PASSWORD") {} %>

test:
  <<: *default
  database: aws_api_test
  host: db
  username: <%= ENV.fetch("DB_USER") { 'postgres' } %>
  password: <%= ENV.fetch("DB_PASSWORD") {} %>

# As with config/credentials.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password or a full connection URL as an environment
# variable when you boot the app. For example:
#
#   DATABASE_URL="postgres://myuser:mypass@localhost/somedatabase"
#
# If the connection URL is provided in the special DATABASE_URL environment
# variable, Rails will automatically merge its configuration values on top of
# the values provided in this file. Alternatively, you can specify a connection
# URL environment variable explicitly:
#
#   production:
#     url: <%= ENV["MY_APP_DATABASE_URL"] %>
#
# Read https://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full overview on how database connection configuration can be specified.
#
production:
  <<: *default
  database: <%= Rails.application.credentials.config.dig(:psql, :database) %>
  host: <%= Rails.application.credentials.config.dig(:psql, :host) %>
  username: <%= Rails.application.credentials.config.dig(:psql, :user) %>
  password: <%= Rails.application.credentials.config.dig(:psql, :password) %>
